[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:28,429 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to consumer-service by app.id property from System Property
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:28,434 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:28,503 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:28,508 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:38,594 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:39,725 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:39,728 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:39,761 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:39,870 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:39,949 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,083 INFO [main][GenericScope.java:294] - BeanFactory id=2cecc764-ba3b-3716-bbcc-96a62c65ad4e
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,108 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,122 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.AccountApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,123 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.DepositoryAgentApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,144 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,156 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$26da710] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:40,167 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,146 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,149 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$356b17a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,152 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$e7b7d9be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,154 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a2cebfad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,158 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,159 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,164 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c99a36db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,169 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,170 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$1776b534] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,205 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,206 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,211 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,214 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:41,236 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,360 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,363 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,443 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9d79814] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,477 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,489 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,500 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f5f19b11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,860 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53050 (http)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,890 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,903 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,904 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:44,911 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\BREW\IT\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;E:\BREW\IT\TortoiseGit\bin;E:\BREW\IT\TortoiseSVN\bin;E:\BREW\IT\JDK\bin;E:\BREW\IT\MAVEN\apache-maven-3.8.4\bin;E:\BREW\IT\Git\Git\cmd;E:\BREW\IT\MYSQL80\mysql-8.0.28-winx64\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;E:\BREW\IT\IDEA\IntelliJ IDEA 2021.3.2\bin;;.]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:45,112 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:45,112 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 6502 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:45,239 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:45,239 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:45,252 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6604f246
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:45,362 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:46,460 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:46,629 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:46,629 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:49,050 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:49,135 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:49,155 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:49,156 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:49,261 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:50,642 INFO [main][SLF4JLogger.java:71] - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:51,884 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:51,929 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,009 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,009 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,149 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,149 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,450 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,712 INFO [cluster-ClusterId{value='6239907ec0c1864e983ffc7d', description='null'}-localhost:27017][SLF4JLogger.java:76] - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 more
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,936 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,937 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,937 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,937 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,937 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,938 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:52,938 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,158 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,161 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,164 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,167 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1647939713166 with initial instances count: 3
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,169 INFO [main][EurekaServiceRegistry.java:42] - Registering application CONSUMER-SERVICE with eureka with status UP
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,170 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1647939713170, current=UP, previous=STARTING]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,172 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,172 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050: registering service...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,180 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,211 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - registration status: 204
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,218 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,345 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,362 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53050 (http) with context path '/consumer'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,363 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53050
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,365 INFO [main][StartupInfoLogger.java:59] - Started ConsumerServiceApplication in 27.761 seconds (JVM running for 30.264)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,781 INFO [RMI TCP Connection(5)-172.35.1.49][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,782 INFO [RMI TCP Connection(5)-172.35.1.49][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:01:53,793 INFO [RMI TCP Connection(5)-172.35.1.49][FrameworkServlet.java:546] - Completed initialization in 11 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:02:14,823 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:02:16,398 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:02:44,815 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:02:46,420 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:03:14,820 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:03:16,424 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:03:44,804 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:03:46,399 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:04:14,814 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:04:16,434 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:04:44,812 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:04:46,405 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:05:14,803 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:05:16,425 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:05:44,815 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:05:46,407 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:06:14,803 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:06:16,397 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:06:44,831 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:06:46,433 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:06:52,942 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:07:14,807 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:07:16,410 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:07:44,817 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:07:46,421 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:08:14,823 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:08:16,393 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:08:44,817 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:08:46,396 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:09:14,822 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:09:16,405 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:09:44,841 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:09:46,419 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:10:14,817 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:10:16,434 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:10:44,816 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:10:46,424 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:11:14,828 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:11:16,402 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:11:44,824 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:11:46,395 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:11:52,946 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:12:14,826 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:12:16,418 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:12:44,809 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:12:46,416 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:13:14,838 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:13:16,429 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:13:44,801 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:13:46,416 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:14:14,827 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:14:16,397 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:14:44,825 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:14:46,418 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:15:14,812 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:15:16,393 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:15:44,838 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:15:46,437 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:16:14,807 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:16:16,416 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:16:44,852 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:16:46,431 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:16:52,962 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:14,822 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:16,394 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:18,105 INFO [Thread-62][EurekaServiceRegistry.java:65] - Unregistering application CONSUMER-SERVICE with eureka with status DOWN
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:18,105 WARN [Thread-62][DiscoveryClient.java:1303] - Saw local status change event StatusChangeEvent [timestamp=1647940638105, current=DOWN, previous=UP]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:18,105 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050: registering service...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:18,111 ERROR [DiscoveryClient-InstanceInfoReplicator-0][RedirectingEurekaHttpClient.java:91] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:53000/eureka/}
com.sun.jersey.api.client.ClientHandlerException: org.apache.http.NoHttpResponseException: localhost:53000 failed to respond
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.NoHttpResponseException: localhost:53000 failed to respond
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:141)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:294)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:679)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:481)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:18,112 WARN [DiscoveryClient-InstanceInfoReplicator-0][RetryableEurekaHttpClient.java:130] - Request execution failed with message: org.apache.http.NoHttpResponseException: localhost:53000 failed to respond
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:18,113 INFO [Thread-62][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:19,246 INFO [Thread-62][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:19,255 INFO [Thread-62][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:19,260 INFO [Thread-62][DisposableBeanAdapter.java:265] - Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:19,260 INFO [Thread-62][DisposableBeanAdapter.java:347] - Destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:19,261 INFO [Thread-62][DiscoveryClient.java:888] - Shutting down DiscoveryClient ...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:20,342 ERROR [DiscoveryClient-InstanceInfoReplicator-0][RedirectingEurekaHttpClient.java:83] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:53000/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:276)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:294)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:679)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:481)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:20,343 WARN [DiscoveryClient-InstanceInfoReplicator-0][RetryableEurekaHttpClient.java:130] - Request execution failed with message: java.net.SocketException: Connection reset
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:20,344 WARN [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:831] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:20,345 WARN [DiscoveryClient-InstanceInfoReplicator-0][InstanceInfoReplicator.java:125] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:20,346 INFO [Thread-62][DiscoveryClient.java:922] - Unregistering ...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:24,408 ERROR [Thread-62][RedirectingEurekaHttpClient.java:83] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:53000/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:233)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:404)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:139)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1055)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 more
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:24,410 WARN [Thread-62][RetryableEurekaHttpClient.java:130] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:24,410 ERROR [Thread-62][DiscoveryClient.java:926] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:233)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:404)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:139)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1055)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:17:24,426 INFO [Thread-62][DiscoveryClient.java:911] - Completed shut down of DiscoveryClient
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:29,299 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to consumer-service by app.id property from System Property
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:29,307 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:29,360 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:29,366 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:40,055 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,126 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,132 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,190 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,421 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,563 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,779 INFO [main][GenericScope.java:294] - BeanFactory id=2cecc764-ba3b-3716-bbcc-96a62c65ad4e
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,812 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,826 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.AccountApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,829 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.DepositoryAgentApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,849 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,863 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$244cb741] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:42,878 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,299 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$574a27d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,304 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$996e9ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,307 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c4adcfde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,312 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,319 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$eb79470c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,324 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,325 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3955c565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,357 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,358 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,362 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,366 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:44,391 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:47,556 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:47,558 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:47,631 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fbb6a845] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:47,668 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:47,680 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:47,691 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$17d0ab42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,060 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53050 (http)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,075 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,082 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,083 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,089 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\BREW\IT\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;E:\BREW\IT\TortoiseGit\bin;E:\BREW\IT\TortoiseSVN\bin;E:\BREW\IT\JDK\bin;E:\BREW\IT\MAVEN\apache-maven-3.8.4\bin;E:\BREW\IT\Git\Git\cmd;E:\BREW\IT\MYSQL80\mysql-8.0.28-winx64\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;E:\BREW\IT\IDEA\IntelliJ IDEA 2021.3.2\bin;;.]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,294 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,294 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 8219 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,415 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,416 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,427 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4536a715
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:48,528 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:49,708 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:49,820 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:49,820 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:52,433 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:52,514 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:52,530 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:52,530 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:52,627 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:54,071 INFO [main][SLF4JLogger.java:71] - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,395 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,441 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,519 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,520 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,654 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,654 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:55,911 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,150 INFO [cluster-ClusterId{value='623996d6c0c1862a10078c3c', description='null'}-localhost:27017][SLF4JLogger.java:76] - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 more
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,473 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,473 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,473 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,473 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,474 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,474 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,474 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,652 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,655 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,659 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,663 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1647941336662 with initial instances count: 0
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,665 INFO [main][EurekaServiceRegistry.java:42] - Registering application CONSUMER-SERVICE with eureka with status UP
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,666 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1647941336666, current=UP, previous=STARTING]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,668 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,668 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050: registering service...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,678 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,715 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,750 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - registration status: 204
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,854 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,871 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53050 (http) with context path '/consumer'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,872 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53050
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:56,874 INFO [main][StartupInfoLogger.java:59] - Started ConsumerServiceApplication in 32.726 seconds (JVM running for 36.659)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:58,138 INFO [RMI TCP Connection(7)-172.35.1.49][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:58,138 INFO [RMI TCP Connection(7)-172.35.1.49][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:28:58,150 INFO [RMI TCP Connection(7)-172.35.1.49][FrameworkServlet.java:546] - Completed initialization in 11 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:18,289 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:19,590 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,664 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,665 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,665 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,666 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,666 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,666 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:964] - Application version is -1: false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,667 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:26,720 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:48,285 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:29:49,605 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:30:18,247 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:30:19,626 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:30:48,280 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:30:49,597 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:31:18,270 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:31:19,603 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:31:48,301 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:31:49,590 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:32:18,304 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:32:19,602 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:32:48,245 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:32:49,605 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:33:18,273 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:33:19,618 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:33:48,268 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:33:49,612 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:33:56,482 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:34:18,289 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:34:19,612 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:34:48,255 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:34:49,595 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:35:18,250 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:35:19,611 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:35:48,277 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:35:49,614 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:36:18,277 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:36:19,607 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:36:48,296 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:36:49,629 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:37:18,287 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:37:19,608 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:37:48,283 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:37:49,595 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:38:18,283 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:38:19,608 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:38:48,280 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:38:49,605 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:38:56,495 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:39:18,287 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:39:19,602 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:39:48,265 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:39:49,621 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:40:18,255 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:40:19,573 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:40:48,285 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:40:49,603 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:41:18,273 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:41:19,623 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:41:48,284 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:41:49,595 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:42:18,291 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:42:19,580 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:42:48,258 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:42:49,589 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:18,066 INFO [Thread-66][EurekaServiceRegistry.java:65] - Unregistering application CONSUMER-SERVICE with eureka with status DOWN
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:18,066 WARN [Thread-66][DiscoveryClient.java:1303] - Saw local status change event StatusChangeEvent [timestamp=1647942198066, current=DOWN, previous=UP]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:18,067 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050: registering service...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:18,075 INFO [Thread-66][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:18,086 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - registration status: 204
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:18,257 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:19,208 INFO [Thread-66][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:19,217 INFO [Thread-66][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:19,222 INFO [Thread-66][DisposableBeanAdapter.java:265] - Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:19,222 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:19,222 INFO [Thread-66][DisposableBeanAdapter.java:347] - Destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:19,223 INFO [Thread-66][DiscoveryClient.java:888] - Shutting down DiscoveryClient ...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:22,237 INFO [Thread-66][DiscoveryClient.java:922] - Unregistering ...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:22,255 INFO [Thread-66][DiscoveryClient.java:924] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - deregister  status: 200
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:22,261 INFO [Thread-66][DiscoveryClient.java:911] - Completed shut down of DiscoveryClient
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:38,339 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to consumer-service by app.id property from System Property
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:38,344 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:38,379 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:38,383 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:48,521 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:49,674 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:49,677 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:49,706 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 17ms. Found 0 repository interfaces.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:49,819 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:49,917 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,053 INFO [main][GenericScope.java:294] - BeanFactory id=2cecc764-ba3b-3716-bbcc-96a62c65ad4e
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,075 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,089 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.AccountApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,090 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.DepositoryAgentApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,109 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,119 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$e7dfd16a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:50,131 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,192 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,194 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1add41ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,200 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$cd2a0418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,202 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8840ea07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,207 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,209 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,213 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$af0c6135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,218 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,218 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$fce8df8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,252 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,253 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,257 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,260 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:51,281 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,371 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,443 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bf49c26e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,487 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,499 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,509 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$db63c56b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,856 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53050 (http)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,875 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,885 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,886 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:54,893 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\BREW\IT\JDK\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;E:\BREW\IT\TortoiseGit\bin;E:\BREW\IT\TortoiseSVN\bin;E:\BREW\IT\JDK\bin;E:\BREW\IT\MAVEN\apache-maven-3.8.4\bin;E:\BREW\IT\Git\Git\cmd;E:\BREW\IT\MYSQL80\mysql-8.0.28-winx64\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;E:\BREW\IT\IDEA\IntelliJ IDEA 2021.3.2\bin;;.]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:55,121 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:55,121 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 6581 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:55,260 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:55,261 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:55,273 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@68e24e7
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:55,376 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:56,565 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:56,565 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:56,650 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:59,330 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:59,401 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:59,416 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:59,416 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:43:59,523 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:01,740 INFO [main][SLF4JLogger.java:71] - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,062 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,108 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,189 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,189 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,309 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,309 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,524 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:03,849 INFO [cluster-ClusterId{value='62399a61c0c18658c4fb3c7a', description='null'}-localhost:27017][SLF4JLogger.java:76] - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 more
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,012 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,012 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,012 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,012 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,012 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,012 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,013 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,200 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,203 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,208 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,211 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1647942244210 with initial instances count: 3
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,213 INFO [main][EurekaServiceRegistry.java:42] - Registering application CONSUMER-SERVICE with eureka with status UP
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,214 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1647942244214, current=UP, previous=STARTING]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,215 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,216 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050: registering service...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,226 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,259 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,266 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:172.35.1.49:53050 - registration status: 204
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,385 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,405 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53050 (http) with context path '/consumer'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,406 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53050
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:04,409 INFO [main][StartupInfoLogger.java:59] - Started ConsumerServiceApplication in 28.72 seconds (JVM running for 31.201)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:05,438 INFO [RMI TCP Connection(8)-172.35.1.49][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:05,439 INFO [RMI TCP Connection(8)-172.35.1.49][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:05,451 INFO [RMI TCP Connection(8)-172.35.1.49][FrameworkServlet.java:546] - Completed initialization in 12 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:25,077 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:26,410 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:55,067 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:44:56,414 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:45:25,081 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:45:26,436 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:45:55,098 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:45:56,412 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:46:25,093 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:46:26,433 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:46:55,096 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:46:56,424 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:47:25,073 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:47:26,420 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:47:55,091 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:47:56,392 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:48:25,085 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:48:26,412 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:48:55,094 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:48:56,405 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:49:04,029 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:49:25,076 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:49:26,424 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:49:55,073 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:49:56,422 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:50:25,063 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:50:26,422 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:50:55,094 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:50:56,423 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:51:25,105 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:51:26,407 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:51:55,067 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:51:56,427 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:52:25,086 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:52:26,418 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:52:55,057 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:52:56,434 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:53:25,083 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:53:26,425 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:53:55,094 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:53:56,422 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:54:04,034 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:54:25,087 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:54:26,446 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:54:55,093 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:54:56,433 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:55:25,089 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:55:26,419 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:55:55,048 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:55:56,426 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:56:25,076 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:56:26,407 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:56:55,075 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:56:56,411 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:57:25,063 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:57:26,448 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:57:55,086 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:57:56,426 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:58:25,089 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:58:26,434 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:58:55,083 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:58:56,414 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:59:04,045 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:59:25,100 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:59:26,424 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:59:55,092 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2022-03-22 17:59:56,436 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
